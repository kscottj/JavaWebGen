/*
 * =================================================================== *
 * Copyright (c) 2017 Kevin Scott All rights  reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 * if any, must include the following acknowledgment:
 * "This product includes software developed by "Kevin Scott"
 * Alternately, this acknowledgment may appear in the software itself,
 * if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The name "Kevin Scott must not be used to endorse or promote products
 * derived from this software without prior written permission. For
 * written permission, please contact kevscott_tx@yahoo.com
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL KEVIN SCOTT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 */
package org.javaWebGen.generator;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.io.*;

import org.apache.commons.text.StrSubstitutor;
import org.javaWebGen.config.*;
import org.javaWebGen.exception.UtilException;
import org.javaWebGen.form.BootstrapStyle;
import org.javaWebGen.form.StyleAware;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Generated view(JSP)s in this case from the database schema.
 * This class will <b>NOT</b> be overwritten.
 * @author Kevin scott
 * @version $Revision: 2.167 $
 *
 */
public class GenerateView extends CodeGenerator {

     public static final String VERSION="4_17";
     public static final String DTD="<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n";
     public static final String ADMIN_JSP="/WEB-INF/jsp/admin/";
     private String adminPrefix="/admin";
     private String detailTemplate=null;
     private String listTemplate=null;
     private String indexTemplate=null;
	 private String baseTag=null;
	 private String webAppCss=null;
	 private StyleAware style=new BootstrapStyle();
	 private static final Logger log=LoggerFactory.getLogger(GenerateView.class);
    /**
    *
    */
    public void init(){
    	indexTemplate=
           	 "<%@taglib prefix=\"t\" tagdir=\"/WEB-INF/tags/admin/\" %> \n"
                 	+" <t:base> \n"
          		    +"     <jsp:body>\n"
            		+"     <div class='col-m'>	\n"		
         		    +"        <h1>Admin Menu</h1>\n"    			 
         		    +"        <p><jsp:include page='/inc/nav.jsp' flush='false'/></p>\n"
         		    +"     </div> "	
         		    +"     </jsp:body>\n"
         		    +"     </t:base>\n"
         		    +"<!--END Index Page Generated by GenerateView "+VERSION+" -->\n";
    	webAppCss=
    		  "body {"
    		 +"padding-top: 50px;"
    		 +"padding-bottom: 50px;"
    		 +"} "
    		 +".webApp { "
    		 +"  padding: 40px 15px; "
    		 +"  text-align: center; "
    		 +"} ";
    	baseTag=
              "<%/****************************************************************************\n"
             +"* WARNING this JSP is generated by GenerateView "+VERSION+" based on Database schema\n"
             +"* This is only a place holder.  It will NOT be overwritten.  Customize as needed \n"
             +"*******************************************************************************/%>\n"
             +"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n"
             +"<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>"
             +"<%@attribute name=\"meta\" fragment=\"true\" %>\n"
             +"<%@attribute name=\"style\" fragment=\"true\" %>\n"
             +"<%@attribute name=\"script\" fragment=\"true\" %>\n"
             +"<%@attribute name=\"initJSFunction\" fragment=\"true\" %>\n"
             +"<%@attribute name=\"bodyScript\" fragment=\"true\" %>\n"
             +"<%@attribute name=\"title\" fragment=\"true\" %>\n"           
             +"<html lang=\"en\">\n"
             +"	<head>\n"
		    +"	  <meta name=\"copyright\" content=\"Copyright 2017\">\n"
		    +"    <meta http-equiv='X-UA-Compatible' content='IE=edge'>\n"
    		+"    <meta name='viewport' content='width=device-width, initial-scale=1'>\n"
			+"	   <jsp:invoke fragment='meta'/>\n"
			+"	    <meta name='author' content='' >\n"
			+"	    <link rel='shortcut icon' href='<c:url value=\"/static/favicon.ico\"/>'>\n"
			+"	    <!-- <meta name='viewport' content='width=device-width, initial-scale=1'>    -->\n"
			+"<!-- Bootstrap -->\n"
		    +"	<link href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css'	rel='stylesheet'>\n"
		    +"  <link href='<c:url value=\"/static/css/bootstrap-datepicker.min.css\"/>'	rel='stylesheet'>"
		    +"  <link href='<c:url value=\"/static/css/bootstrap-timepicker.min.css\"/>' rel='stylesheet'>\n"
		    +"	<link href='<c:url value=\"/static/css/webApp.css\"/>' rel='stylesheet'>\n"	
		    +"	<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n"
		    +"	<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n"
		    +"	<!--[if lt IE 9]>\n"
		    +" 	  <script src='https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js'></script>\n"
	    	+"	  <script src='https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js'></script>\n"
    		+"	<![endif]-->\n"
    		+"	<script>\n"
    		+"  	function init(){\n"
    		+"		<jsp:invoke fragment='initJSFunction'/>\n"
    		+"	}\n"
    		+"	</script>\n"
    		+" 	"
    		+" <script><jsp:invoke fragment='script' /></script>\n"
    		+"  	<title><jsp:invoke fragment='title'/></title> \n"
    		+"   	  </head>\n"
    		+"    	  \n"
			+"    	  <body onLoad=\"init()\">\n"
			+"    	 	<!--begin menu-->\n"
			+"    	    <div class='navbar navbar-inverse navbar-fixed-top' role=\"navigation\">\n"
			+"    	      <div class='container'>\n"
			+"    	        <div class='navbar-header'>\n"
			+"    	          <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\n"
			+"    	            <span class='sr-only'>Toggle navigation</span>\n"
			+"   	            <span class='icon-bar'></span>\n"
			+"    	          </button>\n"
			+"  	          <a class='navbar-brand active' href='/admin/index.jsp'>Admin</a>\n"
			+" 	        </div>\n"
			+"  	        <div class='collapse navbar-collapse'>\n"
			+"	          <ul class='nav navbar-nav'>\n"
			+"            <li> </li>\n"
			+" </ul>\n"
			+" </div><!--/.nav-collapse -->\n"
			+" </div>\n"
			+"</div>\n"
			+"<!--end menu-->  \n"
	    	+"<div class='container'>\n"
	    	+"<div class='col-m'>	\n"		
	    	+"	<div class='webApp'><jsp:doBody/></div>	 \n"
	    	+"</div>	\n" 
	    	+"</div>\n"
	    	+"<footer class='navbar navbar-fixed-bottom'><div class=\"container\">\n"
	    	+"\n<jsp:include page='/inc/footer.jsp' flush='false'/>\n"
	    	+"</div></footer>\n"
	    	+"</div><!-- /.container --> \n"
	    	+"<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\n"
	    	+"<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n"
	    		+"<!-- Include all compiled plugins (below), or include individual files as needed -->\n"
	    	+"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.js\"></script>\n"
	    	+"<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js'></script>\n"
	    	+"<script src='<c:url value=\"/static/js/bootstrap-datepicker.min.js\"/>'></script>"
	    	+"<script src='<c:url value=\"/static/js/bootstrap-timepicker.min.js\"/>'></script>"
	    	+"<script>\n"
	    	+"<jsp:invoke fragment='bodyScript'/> \n"
	    	+"</script>\n"
	    	+"</body>\n"
        	+"<!--end base template "+VERSION+"-->\n"
	    	+"</html>";
	
        detailTemplate=
        	
        	 "<%@taglib prefix=\"t\" tagdir=\"/WEB-INF/tags/admin/\" %> \n"
        	+"<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n"
        	+"<%@taglib prefix=\"fmt\" uri=\"http://java.sun.com/jsp/jstl/fmt\"%>\n" 
        	+"<fmt:setBundle basename=\"messages\" var=\"msg\" />\n"	
        	+" <t:base> \n"
        	+"   <jsp:attribute name=\"script\"> \n"
        	+"       ${javaWebGen.script}\n"
        	+"  </jsp:attribute>  \n"  
        	+"  <jsp:attribute name=\"bodyScript\">\n"
        	+"     ${form.JQueryScript}\n"
        	+"  </jsp:attribute>   \n" 
        	+"  <jsp:attribute name=\"title\">\n"
        	+"     ${javaWebGen.className}"     
        	+"  </jsp:attribute>   \n"         	
		    +"  <jsp:body>\n"
   		    +"  <div class='col-m'>	\n"		
		    +"     <h1>Detail ${javaWebGen.className}</h1>\n"   
		    +"      ${javaWebGen.form}\n"
		    +"  </div> "	
		    +" </jsp:body>\n"
		    +"</t:base>\n"
		    +"<!--END DETAIL Page Generated by GenerateView "+VERSION+" -->\n";

            listTemplate=DTD+   
               	 "<%@taglib prefix=\"t\" tagdir=\"/WEB-INF/tags/admin/\" %> \n"
               	+"<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>\n" 
             	+" <t:base> \n"
     		    +" <jsp:body>\n"
     	    	+"  <div class='col-m'>	\n"		
        		+"   </div>\n"
        		+"  <div class='col-m'>	\n"		
     		    +"  <h1> ${javaWebGen.className} List</h1>\n"    			 
     		    +"         ${javaWebGen.form}\n"
     		    +"  </div> \n"	
     		    +" </jsp:body>\n"
     		    +" </t:base>\n"
     		    +"<!--END DETAIL Page Generated by GenerateView "+VERSION+" -->\n";

        detailTemplate=getTemplate(detailTemplate);
        listTemplate=getTemplate(listTemplate);
        
    }

    /************************
    * list of list of column types
    ****************************/
    protected String makeTypes(String[] cols, int[] types){
        String text =
        "\t/**********************************************\n"+
        "\t*get an array of collumn types that match DB table\n"+
        "\t*@return array of Types\n"+
        "\t************************************************/\n"+
        "\tpublic int[] getDataTypes(){\n"+
        "\t\tif(types == null){\n"+
        "\t\t types = new int["+types.length+"];\n";
            for(int i=0;i<types.length;i++){
                    text+="\t\t\t types["+i+"]="+types[i]+";\n";
            }
            text+="\t\t} //end if\n";
    
            text+="\treturn types;\n";
            text+="\t}\n\n";
            return text;
    }

    /**
     *gen all private vars
     */
     protected String makeVars(String[] cols,int[] types)throws Exception{
 		String beanName=DataMapper.formatClassName(getTableName() );
 		//String daoName=DataMapper.formatClassName(tableName)+"DAO";
 		String text=
 		    "<jsp:useBean id=\"formBean\" scope=\"request\" class=\"org.javaWebGen.data.bean."+beanName+"\" />\n";		
         return text;
     }

     /**
      *gen all private vars
      */
      protected String makeCreateVars(String[] cols,int[] types)throws Exception{
  		String beanName=DataMapper.formatClassName(getTableName());
  		//String daoName=DataMapper.formatClassName(tableName)+"DAO";
  		String text=
  			 "<jsp:useBean id=\"formBean\" scope=\"request\" class=\"org.javaWebGen.data.bean."+beanName+"\" />\n";	
          return text;
      }

/**
 * generate html form
 * @param cols
 * @param types
 * @return form in html
 * @throws Exception
 */
    protected String makeForm(String[] cols, int[] types)throws Exception{
    	String beanName=DataMapper.formatClassName(getTableName());
    	 
    	ArrayList <String> primaryKeys= getPrimaryKeys();
        String text=
         "<div class='row'><a href='"+adminPrefix+"/index.jsp'>Admin Menu</a>\n"
        +"<a href='"+adminPrefix+"/"+beanName+"/"+WebConst.LIST_CMD+"'>Back to List Menu</a>"
        +"</div>\n"
    	+"<form id='dataFormId' name='dataForm' action ='"+adminPrefix+"/"+beanName+"/"+WebConst.UPDATE_CMD+"' METHOD='post'>\n";
        for(String col:cols){
        	String var=DataMapper.formatVarName(col);
        	boolean isPrimary= false;
        	for(String pkey:primaryKeys){
        		if(pkey.endsWith(col)){
        			isPrimary=true;
        		}
        		if(isPrimary){
        			text+=
        			 "<div class='"+this.style.getFormGroup()+"'>\n"
        			+"<div class='"+this.style.getColSm2()+"'>"
        					+DataMapper.formatClassName(col)+"</div><div class='"+style.getColSm10()+"'>${form."+var+".value}</div>\n"
        			+"</div>\n"
        			+"<input type='hidden' name='"+var+"' value='${form."+var+".value}'>\n";
        		}else{
        			text+="${form."+var+".divTag}\n";
        		}
        	}
        }
    	if(primaryKeys.size()==1) { 
        text+=
	 		 "<button id='button.update' class='"+style.getSubmitButton()+"' name='updateBut' onClick='updateClick(dataForm)' ><fmt:message key=\"dialog.save\" bundle=\"${msg}\" /></button>\n"
	 		+"<button id='button.delete' class='"+style.getWarnButton()+"' name='deleteBut' onClick='deleteClick(dataForm)'><fmt:message key=\"dialog.delete\" bundle=\"${msg}\" /></button>\n"
	        +"</form>\n";
    	}else {
    		text+="<!--update and delete not supported  --></form>\n";
    	}
       
        return text;

    }
    /**
     * 
     * @param cols
     * @param types
     * @return
     */
	private String makeCreateForm(String[] cols, int[] types) {
    	String beanName=DataMapper.formatClassName(getTableName());
   	 
    	ArrayList <String> primaryKeys= getPrimaryKeys();
        String text=
        	 "<div class='row'><a href='/admin/index.jsp'>Admin Menu</a>\n"
        	+"<a href='"+this.adminPrefix+"/"+beanName+"/"+WebConst.LIST_CMD+"'>Back to List Menu</a>"
        	+"</div>\n"
        	+"<form id='dataFormId' name='dataForm' action ='"+this.adminPrefix+"/"+beanName+"/"+WebConst.CREATE_CMD+"' METHOD='post'>\n";
        for(String col:cols){
        	String var=DataMapper.formatVarName(col);
        	boolean isPrimary= false;
        	for(String pkey:primaryKeys){
        		if(pkey.endsWith(col)){
        			isPrimary=true;
        		}
        		if(isPrimary){
        			text+="<%--primary key "+var+"--%>\n";
 
        		}else{
        			text+="${form."+var+".divTag}\n";
        		}
        	}
        }
        if(primaryKeys.size()==1) { 
        	text+="<button id='button.update' type='submit' class='"+style.getSubmitButton()+"'><fmt:message key=\"dialog.add\" bundle=\"${msg}\" /></button>\n"
        		+"</form>\n";
        }else {
        	text+="<!--update not supported -->\n"
            	+"</form>\n";	
        }   

		return text;
	}  
/**
 * make a html list
 * @param cols
 * @param types
 * @return html list table
 * @throws Exception
 */
     protected String makeList(String[] cols, int[] types)throws Exception{
     	String beanName=DataMapper.formatClassName(getTableName() );
     	ArrayList <String> primaryKeys= getPrimaryKeys();
     	 //String text="<b>No Records found</b>";
     	 String text=
     		 "<p><a href='"+adminPrefix+"/"+beanName+"/add'>Add New Record</a></p>"
		     +"<c:choose>\n" 	
		 	 +"   <c:when test=\"${!empty  dataBeanList}\">\n"
		     +" <table class='"+style.getStripedTable()+"'>\n     <tr>";
     	 for(int i=0;i<2;i++){
     		 text+="<th>"+cols[i]+"</th>";
     	 }
     	 text+="<th>Action</th></tr>\n"
     	 	+"  <c:forEach var=\"bean\" items=\"${dataBeanList}\"> \n"
     	 	+"    <tr>";
     	 for(int i=0;i<2;i++){
     		 text+=
     		 "<td>${bean."+DataMapper.formatVarName(cols[i])+"}</td>";
     	 }
 		text+=	 
 			 "<td><a href='"+adminPrefix+"/"+beanName+"/detail";
 		if(primaryKeys.size()==1){
 			text+="?"+DataMapper.formatVarName(primaryKeys.get(0) )+"=${bean."+DataMapper.formatVarName(primaryKeys.get(0) )+"}";
 		}
 		if(primaryKeys.size()>1){
	 		for(int i=1;i<primaryKeys.size();i++){
	 			text+="&"+DataMapper.formatVarName(primaryKeys.get(i) )+"=${bean."+DataMapper.formatVarName(primaryKeys.get(i) )+"}";
	 		}
 		}
 		text+=
 			"'>Edit</a></td></tr>\n" 
 			+"</c:forEach>\n"
 			+"</table>\n"
 			+"</c:when>\n"
 			+"  <c:otherwise>\n"
 		 	+"    <i>no Data Found</i>\n"
 		 	+"  </c:otherwise>\n"
 		 	+"</c:choose>\n";
         return text;

     }
     /**
      * build nave menu left hand
      * @return
      * @throws Exception
      */
     private String makeNav()throws Exception{
      	//String beanName=DataMapper.formatClassName(getTableName() );
       
 
    	StringBuffer buffer=new StringBuffer("<ul class=\"nav nav-pills nav-stacked\">\n");
		for( String table:getEntityNames() ){
			String entity=DataMapper.formatClassName(table);
			buffer.append("<li><a href='"+entity+"/list'>List "+entity+"</a></li>\n");
		}
		buffer.append("</ul>\n");
		return buffer.toString();
     }
     /**
      * generate script functions for update and delete actions. prompts uses to confirm deletes
      * @param cols
      * @param types
      * @return
      */
     private String makeJavascript(String[] cols, int[] types){
     	String beanName=DataMapper.formatClassName(getTableName() );
     		String text=
     		
         "function deleteClick(dataForm){\n" +
         "\talert('Are you sure you want to delete this record?');\n" +
         "\tdataForm.action='/admin/"+beanName+"/"+WebConst.DELETE_CMD+"';\n"+
         "\tdataForm.submit();\n" +
		 "} //end delete function\n" +
		 
         "function updateClick(dataForm){\n" +
         //"alert('Are you sure you want to delete this record?');\n" +
         "\tdataForm.action='/admin/"+beanName+"/"+WebConst.UPDATE_CMD+"';\n"+
         "\tdataForm.submit();\n" +
		 "} //end update function\n";

     	return text;
     	
     	
     }


    /**************************************************
    *build class based on template
    ********************************************************/
    protected String buldDetail() throws Exception{
    	String[] colNames = getColNames();
    	int[] colTypes = getColTypes();
        if( colNames!=null &&  colTypes !=null){
            
          
            String form =makeForm(colNames, colTypes); 
            String script =makeJavascript( colNames, colTypes);
            
            /*String[] p = new String[5];
            p[0]=DataMapper.formatClassName(getTableName() );
            p[1]=DataMapper.formatClassName(getTableName() );
            p[2]=form;
            p[3]=script;*/ 
            
            HashMap<String,String>valueMap = new HashMap<String,String>();
            valueMap.put("javaWebGen.className",DataMapper.formatClassName(getTableName()) );
            valueMap.put("javaWebGen.form",form );
            valueMap.put("javaWebGen.script",script );
           
            StrSubstitutor sub = new StrSubstitutor(valueMap);
            //String classText = StringUtil.replace(detailTemplate,p);
            return sub.replace(detailTemplate);
        }else{
            return "";
        }
        
    }
    /************************************************8**
     *build class based on template
     ********************************************************/
     protected String buldList() throws Exception{
     	String[] colNames = getColNames();
    	int[] colTypes = getColTypes();

         if( colNames!=null &&  colTypes !=null){
             
            /* String header =makeHeader(colNames, colTypes);
             String footer =makeFooter(colNames, colTypes);*/
             String form =makeList(colNames, colTypes);
             /*String nav =makeNav(colNames, colTypes);
             String menu =makeMenu(colNames, colTypes);
             String vars = "";*/
             
             /*String[] p = new String[2];
             p[0]=DataMapper.formatClassName(getTableName() );
             p[1]=form;*/
             HashMap<String,String> valueMap = new HashMap<String,String>();
             valueMap.put("javaWebGen.className",DataMapper.formatClassName(getTableName()) );
       		 valueMap.put("javaWebGen.form",form );
         
             StrSubstitutor sub = new StrSubstitutor(valueMap);
             return sub.replace(listTemplate);
         }else{
             return "";
         }
         
     }

	/**
    *
    */
    protected void execute() throws UtilException{
        writeJavaClass( );

    }

    /**
    *Write out generated class
     * @throws Exception
    */
    private void writeJavaClass() throws UtilException{
    	try{
	    	String detail=buldDetail();
	    	String list = buldList();
	       	String create=buldCreate();
	       	String filePath=this.getFilePath();
	    	if(this.getPrimaryKeys().size()>0){
		        
		        String name = DataMapper.formatClassName(getTableName() );
	
		        File file=new File(filePath+ADMIN_JSP+name+"Detail.jsp");
		        //if( !file.exists() ){
			       
			        FileWriter fo = new FileWriter(file);
			        PrintWriter out = new PrintWriter(fo);
			        out.print(detail);
			        out.flush();
			        out.close();
			        log.info("---Wrote File "+filePath+ADMIN_JSP+name+"Detail.jsp");

		        //}
		        
		        name = DataMapper.formatClassName(getTableName() );
		        file=new File(filePath+ADMIN_JSP+name+"List.jsp");
		        //if(!file.exists() ){

		        	fo = new FileWriter(file);
		        	out = new PrintWriter(fo);
			        out = new PrintWriter(fo);
			        out.print(list);
			        out.flush();
			        out.close();
			        log.info("---Wrote File "+ADMIN_JSP+name+"List.jsp");
		        //}
		       
		        name = DataMapper.formatClassName(getTableName() );
		        file=new File(filePath+ADMIN_JSP+name+"Create.jsp");
		        //if(!file.exists() ){

			        fo = new FileWriter(file);
			        out = new PrintWriter(fo);
			        out.print(create);
			        out.flush();
			        out.close();
			        log.info("---Wrote File "+filePath+ADMIN_JSP+name+"Create.jsp");
		        //}

			}
    	}catch(Exception e){
    		throw new UtilException(UtilException.CODE_GENERATOR_EXEC,e);
    	}
    	
	        
    }
    /**
     * build greate form
     * @return form
     * @throws Exception
     */
    private String buldCreate() throws Exception{
    	String[] colNames = getColNames();
    	int[] colTypes = getColTypes();
        if( colNames!=null &&  colTypes !=null){
            
          
            String form =makeCreateForm(colNames, colTypes); 
            String script =makeJavascript( colNames, colTypes);
            
            /*String[] p = new String[5];
            p[0]=DataMapper.formatClassName(getTableName() );
            p[1]=DataMapper.formatClassName(getTableName() );
            p[2]=form;
            p[3]=script;*/            
            HashMap<String,String> valueMap = new HashMap<String,String>();
            valueMap.put("javaWebGen.className",DataMapper.formatClassName(getTableName() ) );
            valueMap.put("javaWebGen.form",form );
            valueMap.put("javaWebGen.script",script );
            StrSubstitutor sub = new StrSubstitutor(valueMap);
            
            //String classText = StringUtil.replace(detailTemplate,p);
            return sub.replace(detailTemplate);
        }else{
            return "";
        }
	}

	/**
	 * Gernerate admin index  
	 * 
	 */
	private void generateIndex(){
		log.debug(">>>generateIndex");
		String filePath=this.getFilePath();
		try{
	        File file=new File(filePath+"/WEB-INF/jsp/admin/index.jsp");
	        if(! file.exists() ){
		        FileWriter fo;
		        //String[] parms=new String[1];
				fo = new FileWriter(file);
				//List<String> tlist=getEntityNames();
				//StringBuffer buffer=new StringBuffer();
				//buffer.append("<ul>\n");
				/*for( String table:tlist){
					String entity=DataMapper.formatClassName(table);
					buffer.append("<li><a href='"+WebConst.ADMIN_+"?page=."+entity+"&cmd=list&page="+entity+"'>List "+entity+"</a></li>\n");
				}*/
				/*buffer.append("</ul>\n"); 
				buffer.append("<p><jsp:include page='/inc/nav.jsp' flush='false'/></p>\n"); 
				parms[0]=buffer.toString();*/
				
				String text =indexTemplate;
		        PrintWriter out = new PrintWriter(fo);
		        out.print(text);
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+filePath+"/WEB-INF/jsp/admin/index.jsp");	
	        }
 
		}catch(IOException ioe){
			
		}finally{
			
		}
		log.debug("<<<generateIndex");

	}
	/**
	 * write out files after looping though table and column list
	 * this method is only call once
	 */
	@Override
	protected void postExecute() throws UtilException {
		String filePath=this.getFilePath();
    	//String[] colNames = getColNames();
    	//int[] colTypes = getColTypes();
		try{
	        File file=new File(filePath+"/WEB-INF/tags/admin/base.tag");
	        if(!file.exists() ){
	
		        FileWriter fo = new FileWriter(file);
		        PrintWriter out = new PrintWriter(fo);
		        out.print( this.getTemplate("admin/base.tag", this.baseTag) );
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+"/WEB-INF/tags/admin/base.tag");
	        }
	        file=new File(filePath+"/WEB-INF/tags/base.tag");
	        if(!file.exists() ){
	
		        FileWriter fo = new FileWriter(file);
		        PrintWriter out = new PrintWriter(fo);
		        out.print( this.getTemplate("base.tag", this.baseTag) );
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+"/WEB-INF/tags/base.tag");
	        }
	        file=new File(filePath+"/static/css/webApp.css");
	        if(!file.exists() ){
		        FileWriter fo = new FileWriter(file);
		        PrintWriter out = new PrintWriter(fo);
		        out.print(this.getTemplate("webAppp.css", this.webAppCss) );
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+"/static/css/webApp.css");
	        }
	        file=new File(filePath+"/inc/nav.jsp");
	        FileWriter fo = null;
	        PrintWriter out =null;
	        //if(!file.exists() ){
		        fo = new FileWriter(file);
		        out = new PrintWriter(fo);
		        out.print(makeNav());
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+filePath+"/inc/nav.jsp");
	        //}

	        file=new File(filePath+"/inc/footer.jsp");
		   // if (!file.exists()){
				fo = new FileWriter(file);
				out = new PrintWriter(fo);
				DateFormat dateFormat = new SimpleDateFormat();
				java.util.Date date = new java.util.Date();
 			    out.print("Autogenerated by JavaWebGen "+VERSION+" on "+dateFormat.format(date) );
		        out.flush();
		        out.close();
		        log.info("---Wrote File "+filePath+"/inc/footer.jsp");
	       
	        //}
		    generateIndex();
	       
		}catch(Exception e){
			throw new UtilException(UtilException.GENERIC,e);
		}

		
	}
	/**
    *
    */
    public static void main(String[] args) {
        try{ 	
        	GenerateView app = new GenerateView();
        	app.setCmdParms(args);
        	app.init();
            app.processXmlFile(app.getFileName());
            log.info("finshed generating view v"+VERSION);
       	}catch(Exception e){
       		log.error("generic error",e);
       	}
    }

	public void useage() {
        System.err.println("GenerateView based on schema");
        System.err.println("<schema> torque XML with tables definitions");
        System.err.println("<path> destination file path");
        System.err.println("-template optional filename of template to use for code generator");
        System.err.println("USAGE Generate <schema> <path> [-template fileName] ");
 
	    System.exit(1);
	}
}