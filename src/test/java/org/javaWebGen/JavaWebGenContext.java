/*
Copyright (c) 2012-2013 Kevin Scott All rights  reserved.
 Permission is hereby granted, free of charge, to any person obtaining a copy of 
 this software and associated documentation files (the "Software"), to deal in 
 the Software without restriction, including without limitation the rights to 
 use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do 
 so.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
 SOFTWARE.
 */ 
package org.javaWebGen;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.javaWebGen.data.dao.DaoFactory;
import org.javaWebGen.model.ServiceFactory;
/******************************************************************************
 This class is generated by GenerateSpringContext v1_05 based on Database schema     
  This class will NOT be regenerated when the database schema is changed. 
  @author Kevin Scott                                                        
  @version $Revision: 1.00 $                                               
*******************************************************************************/
public class JavaWebGenContext implements  ApplicationContextAware{ 
//begin private Vars
   private static  ApplicationContext ctx=null;
   public final static String SPRING_CONTEXT="JavaWebGenContext.xml";
   public final static Logger log = LoggerFactory.getLogger(JavaWebGenContext.class);
   @Override
   public void setApplicationContext(ApplicationContext appContext) throws BeansException {
	   ctx=appContext;
   }
   private static synchronized ApplicationContext getSpringContext(){
     if(ctx==null){ //if not set load it from classpath
	      ctx= new ClassPathXmlApplicationContext(SPRING_CONTEXT);
	     log.warn("Using default SpringContext should only see this in Unit testing="+ctx);
     }
    return ctx;
  }
  public static DaoFactory getDao(){
	  return (DaoFactory)  getSpringContext().getBean("DaoFactory"); 
  }
  public static ServiceFactory getModel(){
	  return (ServiceFactory)  getSpringContext().getBean("ServiceFactory"); 
  }
  public static ServiceFactory getService(){
	  return (ServiceFactory)  getSpringContext().getBean("ServiceFactory"); 
  }
}
