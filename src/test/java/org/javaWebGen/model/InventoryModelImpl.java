/*
 Copyright (c) 2012-2013 Kevin Scott All rights  reserved.
 Permission is hereby granted, free of charge, to any person obtaining a copy of 
 this software and associated documentation files (the "Software"), to deal in 
 the Software without restriction, including without limitation the rights to 
 use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 of the Software, and to permit persons to whom the Software is furnished to do 
 so.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
 SOFTWARE.
 */ 
/** data Acees Object talks to DB **/
package org.javaWebGen.model;
import java.util.*;
import org.javaWebGen.data.bean.*;
import org.javaWebGen.*;
import org.javaWebGen.exception.WebAppException;
import org.javaWebGen.data.dao.*
;/******************************************************************************
* WARNING this class is generated by GenerateModel 2_09 based on Database schema     
* This class should not be modified, but may be extended to add required logic 
* It will be regenerated if the database schema changes 
*******************************************************************************/
public abstract class InventoryModelImpl implements BusinessModel { 
//begin private Vars
	
/** data bean for this object **/;
	private InventoryDAO dao= new InventoryDAO();

//find by Primary Key
	//Can only generate code for one Primary key per table \nYou need to write custom code for this

//begin insert (create)
	//Can only generate code for one Primary key per table \nYou need to write custom code for this

//begin update(store)
	//Can only generate code for one Primary key per table \nYou need to write custom code for this

//begin delete(store)
	//Can only generate code for one Primary key per table \nYou need to write custom code for this

//begin listAll)
//
	/***************************************************
	* Warning Generated method list of all records in a table 
	* @return array of DataBeans
	******************************************************/
	public List<Inventory> list() throws WebAppException{
		List<Inventory> dataBeans =null;
 		try{
		dataBeans = dao.findAll();
		}catch(Exception e){
			throw new WebAppException(WebAppException.APP_ERROR,e);
		}
		return dataBeans;
	} //end list

}
